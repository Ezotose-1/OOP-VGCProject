@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model OOP_VGCProject.DTO.DisciplineDTO

@{
    ViewData["Title"] = "Edit";
}

<h1>Manage Discipline</h1>

<h4>Discipline</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="discipline.Id" />
            <div class="form-group">
                <label asp-for="discipline.CourseName" class="control-label"></label>
                <input asp-for="discipline.CourseName" class="form-control" />
                <span asp-validation-for="discipline.CourseName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<br />
<br />
<br />
<table class="table">
    <thead>
        <tr>
            <th>
                User in this discipline
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model.UserIn)
        {
            <tr>
                <td>
                    @UserManager.FindByIdAsync(user.UserId).Result
                </td>
            </tr>
        }
    </tbody>
</table>
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
